(()=>{var I=Object.create;var F=Object.defineProperty;var z=Object.getOwnPropertyDescriptor;var _=Object.getOwnPropertyNames;var C=Object.getPrototypeOf,W=Object.prototype.hasOwnProperty;var B=(f,r)=>()=>(r||f((r={exports:{}}).exports,r),r.exports);var V=(f,r,h,M)=>{if(r&&typeof r=="object"||typeof r=="function")for(let y of _(r))!W.call(f,y)&&y!==h&&F(f,y,{get:()=>r[y],enumerable:!(M=z(r,y))||M.enumerable});return f};var J=(f,r,h)=>(h=f!=null?I(C(f)):{},V(r||!f||!f.__esModule?F(h,"default",{value:f,enumerable:!0}):h,f));var N=B(v=>{var U=function(){"use strict";let f="1.1.0";function r(o){alert(`Mod ERROR:
`+o);let n=new Error(o);throw console.error(n),n}let h=new TextEncoder;function M(o){return!!o&&typeof o=="object"&&!Array.isArray(o)}function y(o){let n=new Set;return o.filter(e=>!n.has(e)&&n.add(e))}let k=new Map,x=new Set;function j(o){x.has(o)||(x.add(o),console.warn(o))}function D(o){let n=[],e=new Map,i=new Set;for(let s of w.values()){let c=s.patching.get(o.name);if(c){n.push(...c.hooks);for(let[a,t]of c.patches.entries())e.has(a)&&e.get(a)!==t&&j(`ModSDK: Mod '${s.name}' is patching function ${o.name} with same pattern that is already applied by different mod, but with different pattern:
Pattern:
${a}
Patch1:
${e.get(a)||""}
Patch2:
${t}`),e.set(a,t),i.add(s.name)}}n.sort((s,c)=>c.priority-s.priority);let p=function(s,c){if(c.size===0)return s;let a=s.toString().replaceAll(`\r
`,`
`);for(let[t,d]of c.entries())a.includes(t)||j(`ModSDK: Patching ${s.name}: Patch ${t} not applied`),a=a.replaceAll(t,d);return(0,eval)(`(${a})`)}(o.original,e),g=function(s){var c,a;let t=(a=(c=E.errorReporterHooks).hookChainExit)===null||a===void 0?void 0:a.call(c,o.name,i),d=p.apply(this,s);return t?.(),d};for(let s=n.length-1;s>=0;s--){let c=n[s],a=g;g=function(t){var d,l;let u=(l=(d=E.errorReporterHooks).hookEnter)===null||l===void 0?void 0:l.call(d,o.name,c.mod),m=c.hook.apply(this,[t,b=>{if(arguments.length!==1||!Array.isArray(t))throw new Error(`Mod ${c.mod} failed to call next hook: Expected args to be array, got ${typeof b}`);return a.call(this,b)}]);return u?.(),m}}return{hooks:n,patches:e,patchesSources:i,enter:g,final:p}}function S(o,n=!1){let e=k.get(o);if(e)n&&(e.precomputed=D(e));else{let i=window,p=o.split(".");for(let a=0;a<p.length-1;a++)if(i=i[p[a]],!M(i))throw new Error(`ModSDK: Function ${o} to be patched not found; ${p.slice(0,a+1).join(".")} is not object`);let g=i[p[p.length-1]];if(typeof g!="function")throw new Error(`ModSDK: Function ${o} to be patched not found`);let s=function(a){let t=-1;for(let d of h.encode(a)){let l=255&(t^d);for(let u=0;u<8;u++)l=1&l?-306674912^l>>>1:l>>>1;t=t>>>8^l}return((-1^t)>>>0).toString(16).padStart(8,"0").toUpperCase()}(g.toString().replaceAll(`\r
`,`
`)),c={name:o,original:g,originalHash:s};e=Object.assign(Object.assign({},c),{precomputed:D(c),router:()=>{},context:i,contextProperty:p[p.length-1]}),e.router=function(a){return function(...t){return a.precomputed.enter.apply(this,[t])}}(e),k.set(o,e),i[e.contextProperty]=e.router}return e}function $(){let o=new Set;for(let n of w.values())for(let e of n.patching.keys())o.add(e);for(let n of k.keys())o.add(n);for(let n of o)S(n,!0)}function R(){let o=new Map;for(let[n,e]of k)o.set(n,{name:n,original:e.original,originalHash:e.originalHash,sdkEntrypoint:e.router,currentEntrypoint:e.context[e.contextProperty],hookedByMods:y(e.precomputed.hooks.map(i=>i.mod)),patchedByMods:Array.from(e.precomputed.patchesSources)});return o}let w=new Map;function O(o){w.get(o.name)!==o&&r(`Failed to unload mod '${o.name}': Not registered`),w.delete(o.name),o.loaded=!1,$()}function P(o,n,e){typeof o=="string"&&typeof n=="string"&&(alert(`Mod SDK warning: Mod '${o}' is registering in a deprecated way.
It will work for now, but please inform author to update.`),o={name:o,fullName:o,version:n},n={allowReplace:e===!0}),o&&typeof o=="object"||r("Failed to register mod: Expected info object, got "+typeof o),typeof o.name=="string"&&o.name||r("Failed to register mod: Expected name to be non-empty string, got "+typeof o.name);let i=`'${o.name}'`;typeof o.fullName=="string"&&o.fullName||r(`Failed to register mod ${i}: Expected fullName to be non-empty string, got ${typeof o.fullName}`),i=`'${o.fullName} (${o.name})'`,typeof o.version!="string"&&r(`Failed to register mod ${i}: Expected version to be string, got ${typeof o.version}`),o.repository||(o.repository=void 0),o.repository!==void 0&&typeof o.repository!="string"&&r(`Failed to register mod ${i}: Expected repository to be undefined or string, got ${typeof o.version}`),n==null&&(n={}),n&&typeof n=="object"||r(`Failed to register mod ${i}: Expected options to be undefined or object, got ${typeof n}`);let p=n.allowReplace===!0,g=w.get(o.name);g&&(g.allowReplace&&p||r(`Refusing to load mod ${i}: it is already loaded and doesn't allow being replaced.
Was the mod loaded multiple times?`),O(g));let s=t=>{typeof t=="string"&&t||r(`Mod ${i} failed to patch a function: Expected function name string, got ${typeof t}`);let d=a.patching.get(t);return d||(d={hooks:[],patches:new Map},a.patching.set(t,d)),d},c={unload:()=>O(a),hookFunction:(t,d,l)=>{a.loaded||r(`Mod ${i} attempted to call SDK function after being unloaded`);let u=s(t);typeof d!="number"&&r(`Mod ${i} failed to hook function '${t}': Expected priority number, got ${typeof d}`),typeof l!="function"&&r(`Mod ${i} failed to hook function '${t}': Expected hook function, got ${typeof l}`);let m={mod:a.name,priority:d,hook:l};return u.hooks.push(m),$(),()=>{let b=u.hooks.indexOf(m);b>=0&&(u.hooks.splice(b,1),$())}},patchFunction:(t,d)=>{a.loaded||r(`Mod ${i} attempted to call SDK function after being unloaded`);let l=s(t);M(d)||r(`Mod ${i} failed to patch function '${t}': Expected patches object, got ${typeof d}`);for(let[u,m]of Object.entries(d))typeof m=="string"?l.patches.set(u,m):m===null?l.patches.delete(u):r(`Mod ${i} failed to patch function '${t}': Invalid format of patch '${u}'`);$()},removePatches:t=>{a.loaded||r(`Mod ${i} attempted to call SDK function after being unloaded`),s(t).patches.clear(),$()},callOriginal:(t,d,l)=>(a.loaded||r(`Mod ${i} attempted to call SDK function after being unloaded`),typeof t=="string"&&t||r(`Mod ${i} failed to call a function: Expected function name string, got ${typeof t}`),Array.isArray(d)||r(`Mod ${i} failed to call a function: Expected args array, got ${typeof d}`),function(u,m,b=window){return S(u).original.apply(b,m)}(t,d,l)),getOriginalHash:t=>(typeof t=="string"&&t||r(`Mod ${i} failed to get hash: Expected function name string, got ${typeof t}`),S(t).originalHash)},a={name:o.name,fullName:o.fullName,version:o.version,repository:o.repository,allowReplace:p,api:c,loaded:!0,patching:new Map};return w.set(o.name,a),Object.freeze(c)}function H(){let o=[];for(let n of w.values())o.push({name:n.name,fullName:n.fullName,version:n.version,repository:n.repository});return o}let E,K=function(){if(window.bcModSdk===void 0)return window.bcModSdk=function(){let o={version:f,apiVersion:1,registerMod:P,getModsInfo:H,getPatchingInfo:R,errorReporterHooks:Object.seal({hookEnter:null,hookChainExit:null})};return E=o,Object.freeze(o)}();if(M(window.bcModSdk)||r("Failed to init Mod SDK: Name already in use"),window.bcModSdk.apiVersion!==1&&r(`Failed to init Mod SDK: Different version already loaded ('1.1.0' vs '${window.bcModSdk.version}')`),window.bcModSdk.version!==f&&(alert(`Mod SDK warning: Loading different but compatible versions ('1.1.0' vs '${window.bcModSdk.version}')
One of mods you are using is using an old version of SDK. It will work for now but please inform author to update`),window.bcModSdk.version.startsWith("1.0.")&&window.bcModSdk._shim10register===void 0)){let o=window.bcModSdk,n=Object.freeze(Object.assign(Object.assign({},o),{registerMod:(e,i,p)=>e&&typeof e=="object"&&typeof e.name=="string"&&typeof e.version=="string"?o.registerMod(e.name,e.version,typeof i=="object"&&!!i&&i.allowReplace===!0):o.registerMod(e,i,p),_shim10register:!0}));window.bcModSdk=n}return window.bcModSdk}();return typeof v<"u"&&(Object.defineProperty(v,"__esModule",{value:!0}),v.default=K),K}()});var A=J(N()),G=A.default.registerMod({name:"MyExMod",fullName:"My example mod",version:"1.0.0",repository:"https://github.com/Jomshir98/bondage-club-mod-sdk"});function L(){console.debug("AES: Init")}L();})();
